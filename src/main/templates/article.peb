<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>郑州四中英才二班典籍</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css">
    <script src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.js"></script>
    <!--suppress CssUnusedSymbol -->
    <style>
        /* ... existing styles ... */
        .entry.pinned {
            border: 2px solid #ffd700;
            background-color: #fffdf0;
        }
        .pin-icon {
            position: absolute;
            top: 5px;
            right: 40px;
            font-size: 1.2em;
            color: #ffd700;
        }
        #password-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.4);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 300px;
            text-align: center;
        }
        #password-input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
        }
        #submit-password {
            padding: 10px 20px;
            background-color: #007BFF;
            color: white;
            border: none;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <!-- ... existing header and theme selection ... -->
    
    <div id="password-modal">
        <div class="modal-content">
            <h2>请输入密码</h2>
            <input type="password" id="password-input">
            <button id="submit-password">提交</button>
        </div>
    </div>

    <div class="container"></div>
    <div class="pagination"></div>
    
    <!-- ... existing footer ... -->

    <script>
        let data = {"data": []};
        let siteEncrypted = false;
        let sitePassword = "";

        {# @pebvariable name="lines" type="java.util.List<art.shittim.routing.IdArticleLine>" #}
        {% for line in lines %}
            data["data"].push({
                "time": "{{ line.time }}",
                "content": "{{ line.line }}",
                "contributor": "{{ line.contrib }}",
                "is_pin": {{ line.is_pin | default(false) }},
                "password": "{{ line.password | default('') }}"
            });
        {% endfor %}

        // Site-wide encryption
        {% if site_password %}
            siteEncrypted = true;
            sitePassword = "{{ site_password }}";
        {% endif %}

        const itemsPerPage = 7;
        let currentPage = 1;
        const totalPages = Math.ceil(data.data.length / itemsPerPage);
        const container = document.querySelector('.container');
        const pagination = document.querySelector('.pagination');
        const passwordModal = document.getElementById('password-modal');
        const passwordInput = document.getElementById('password-input');
        const submitPassword = document.getElementById('submit-password');

        // ... existing theme-related code ...

        function renderPagination() {
            // ... existing pagination code ...
        }

        function renderContent(content) {
            const div = document.createElement('div');
            div.innerHTML = content;
            renderMathInElement(div, {
                delimiters: [
                    {left: "$$", right: "$$", display: true},
                    {left: "$", right: "$", display: false}
                ]
            });
            return div.innerHTML;
        }

        function renderPage(pageNumber) {
            container.innerHTML = '';
            const start = (pageNumber - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            const pageEntries = data.data.slice(start, end);
            pageEntries.forEach(entry => {
                const div = document.createElement('div');
                div.className = 'entry';
                if (entry.is_pin) {
                    div.classList.add('pinned');
                }
                div.innerHTML = `
                    <span class="entry-time">${entry.time}</span>
                    <span class="entry-contributor">${entry.contributor || ''}</span>
                    ${entry.is_pin ? '<span class="pin-icon">📌</span>' : ''}
                    <div>${renderContent(entry.content)}</div>
                `;
                if (entry.password) {
                    div.innerHTML = '<div>该条目已加密，请点击查看</div>';
                    div.onclick = () => promptPassword(entry.password, () => {
                        div.innerHTML = `
                            <span class="entry-time">${entry.time}</span>
                            <span class="entry-contributor">${entry.contributor || ''}</span>
                            ${entry.is_pin ? '<span class="pin-icon">📌</span>' : ''}
                            <div>${renderContent(entry.content)}</div>
                        `;
                    });
                }
                container.appendChild(div);
            });
            renderPagination();
        }

        function promptPassword(correctPassword, callback) {
            passwordModal.style.display = 'block';
            submitPassword.onclick = () => {
                if (passwordInput.value === correctPassword) {
                    passwordModal.style.display = 'none';
                    callback();
                } else {
                    alert('密码错误');
                }
                passwordInput.value = '';
            };
        }

        function checkSitePassword() {
            if (siteEncrypted) {
                promptPassword(sitePassword, () => {
                    renderPage(currentPage);
                });
            } else {
                renderPage(currentPage);
            }
        }

        loadTheme();
        checkSitePassword();

        const params = new URLSearchParams(window.location.search);

        if(params.has('page')) {
            currentPage = parseInt(params.get('page'));
            if(currentPage > totalPages) {
                currentPage = totalPages;
            }
            if(currentPage < 1) {
                currentPage = 1;
            }
        }

        // Inactivity timer for desktop
        let inactivityTimer;
        function resetInactivityTimer() {
            clearTimeout(inactivityTimer);
            inactivityTimer = setTimeout(() => {
                if (siteEncrypted && !isMobileDevice()) {
                    checkSitePassword();
                }
            }, 60000); // 1 minute
        }

        function isMobileDevice() {
            return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
        }

        if (siteEncrypted) {
            document.addEventListener('mousemove', resetInactivityTimer);
            document.addEventListener('keypress', resetInactivityTimer);
        }

        renderPage(currentPage);
    </script>
</body>
</html>
